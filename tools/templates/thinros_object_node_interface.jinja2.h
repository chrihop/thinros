#ifndef _THINROS_NODE_INTERFACE_{{ node.name | upper }}_H_
#define _THINROS_NODE_INTERFACE_{{ node.name | upper }}_H_

/**
 * Node interface for {{ node.name }}
 *
 * @note This file is generated by thinros. Do not edit it manually.
 * @file {{ node.name }}.h
 * - node: {{ node.name }}
 * - partition: {{ node.partition.par_id }}
 * - network: {{ misc.network }}
 * @version {{ misc.version }}
 * @date {{ misc.date }}
 */

#include "thinros_object.h"

{% for t in node.publish %}
#define P_TOPIC_{{ t.name }} {{ loop.index0 }}
{% endfor %}

{% for t, callbacks in node.subscribe %}
#define S_TOPIC_{{ t.name }} {{ loop.index0 }}
{% endfor %}

#if __cplusplus
extern "C" {
#endif

/* startup callbacks */
{% if aggregate.startup | length > 0 %}
{% for s in aggregate.startup %}
void {{ s.name }}(struct thinros_object_t * obj);
{% endfor %}
{% endif %}

{% if node.startup_entry.name == 'default' %}
void USE_STARTUP({{ node.name }})(struct thinros_object_t * obj);
{% else %}
void {{ node.startup_entry.name }}(struct thinros_object_t * obj);
{% endif %}


/* shutdown callbacks */
{% if aggregate.shutdown | length > 0 %}
{% for s in aggregate.shutdown %}
void {{ s.name }}(struct thinros_object_t * obj);
{% endfor %}
{% endif %}

{% if node.shutdown_entry.name == 'default' %}
void USE_SHUTDOWN({{ node.name }})(struct thinros_object_t * obj);
{% else %}
void {{ node.shutdown_entry.name }}(struct thinros_object_t * obj);
{% endif %}

/* spin callbacks */
{% if aggregate.spin | length > 0 %}
{% for s in aggregate.spin %}
void {{ s.name }}(struct thinros_object_t * obj);
{% endfor %}
{% endif %}

{% if node.spin_entry.name == 'default' %}
void USE_SPIN({{ node.name }})(struct thinros_object_t * obj);
{% else %}
void {{ node.spin_entry.name }}(struct thinros_object_t * obj);
{% endif %}

/* message callbacks */
{% for t, content in aggregate.subscribe.items() %}
/* on {{ t }} */
{% for c in content['callbacks'] %}
void {{ c.name }}(void * data);
{% endfor %}

{% if content['entry'].name == 'default' %}
void USE_MESSAGE_HANDLER({{ node.name }}, {{ t }})(void * data);
{% else %}
void {{ content['entry'].name }}(void * data);
{% endif %}

{% endfor %}

/* node interface */
THINROS_OBJ_DECLARE({{ node.name }});

#if __cplusplus
}
#endif

#endif /* !_THINROS_NODE_INTERFACE_{{ node.name | upper }}_H_ */
